<!--
 * @Author: xwen
 * @Date: 2020-04-20 20:07:29
 * @LastEditTime: 2020-04-20 21:40:18
 * @LastEditors: xwen
 * @Description: 
 -->

## vue组件的生命周期
1、新建 Vue 实例 new Vue() 的过程中，首先执行 init()

2、init() 过程首先是执行 beforeCreate，初始化 data、props、watch、computed，这些执行都是在 beforeCreate 阶段和 create 阶段，也是创建响应式数据的阶段，这个阶段不要去修改数据

3、created 阶段结束，会去判断实例中有无 el option 选项，如果没有会执行 $mount(), 如果有，直接执行下一步

4、判断 template，若有，会把 template 打成一个个 render function，其中的传参h就是 vue.createElement, 参数为标签，对象(可是props或事件)，内容

5、render 函数发生在 beforeMounted 和 mounted 之间，所以当 beforeMount 时，$el 还只是 HTML 上的节点，mounted 时才把渲染的内容挂载到 DOM 上，实际就是执行了 render function

注意：mounted 在整个实例生命内只会执行一次

6、beforeMount 有了 render function 才执行，执行完才执行mount，mounted 执行完，整个生命周期中主动执行的函数就已经完毕，剩下的比如 beforeUpdata、updata、beforDestory、destory需要外部触发

##  vue computed原理
1、设置 computed 的 getter， 若执行了 computed 函数，会去读取 data 值，就会触发 data 的 getter，从而建立 data 的依赖关系
2、首次 mounted 的值，会执行 vm.computed 对应的 getter，没有 getter 的是赋值函数
3、若 computed 的属性值依赖其他属性值，会将 target 暂存在栈中，先进行其他的依赖收集